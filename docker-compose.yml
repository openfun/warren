version: '3.8'

services:
  postgresql-lti:
    image: postgres:12
    env_file:
      - .env

  postgresql-indicators:
    image: postgres:12
    ports:
      - "${WARREN_POSTGRES_INDICATORS_PORT:-5432}:${WARREN_POSTGRES_INDICATORS_PORT:-5432}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${WARREN_POSTGRES_INDICATORS_USER}
      POSTGRES_PASSWORD: ${WARREN_POSTGRES_INDICATORS_PASSWORD}
      POSTGRES_DB: ${WARREN_POSTGRES_INDICATORS_DATABASE}


  app:
    build:
      context: src/app
      target: "${WARREN_APP_IMAGE_BUILD_TARGET:-development}"
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: "${WARREN_APP_IMAGE_NAME:-warren-app}:${WARREN_APP_IMAGE_TAG:-development}"
    environment:
      PYLINTHOME: /app/.pylint.d
    env_file:
      - .env
    ports:
      - "${WARREN_APP_SERVER_PORT:-8090}:${WARREN_APP_SERVER_PORT:-8090}"
    volumes:
      - ./src/app:/app
    depends_on:
      - "postgresql-lti"
      - "api"

  api:
    build:
      context: src/api
      target: "${WARREN_API_IMAGE_BUILD_TARGET:-development}"
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: "${WARREN_API_IMAGE_NAME:-warren-api}:${WARREN_API_IMAGE_TAG:-development}"
    env_file:
      - .env
    environment:
      PYLINTHOME: /app/.pylint.d
    ports:
      - "${WARREN_API_SERVER_PORT:-8100}:${WARREN_API_SERVER_PORT:-8100}"
    command:
      - uvicorn
      - "core.warren.api:app"
      - "--proxy-headers"
      - "--log-config"
      - "core/logging-config.yaml"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "${WARREN_API_SERVER_PORT:-8100}"
      - "--reload"
    volumes:
      - ./src/api:/app
      - ./bin/patch_statements_date.py:/opt/src/patch_statements_date.py
    depends_on:
      - ralph
      - postgresql-indicators

  frontend:
    build:
      context: src/frontend
      target: "${WARREN_FRONTEND_IMAGE_BUILD_TARGET:-development}"
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: "${WARREN_FRONTEND_IMAGE_NAME:-warren-frontend}:${WARREN_FRONTEND_IMAGE_TAG:-development}"
    environment:
      HOME: /tmp
    ports:
      - "${WARREN_FRONTEND_SERVER_PORT:-3000}:${WARREN_FRONTEND_SERVER_PORT:-3000}"
      - "${WARREN_FRONTEND_DOCS_PORT:-3001}:${WARREN_FRONTEND_DOCS_PORT:-3001}"
    command:
      - yarn
      - run
      - dev
    volumes:
      - ./src/frontend:/app
    depends_on:
      - api

  # -- backends
  ralph:
    image: fundocker/ralph:3.8.0
    user: ${DOCKER_USER:-1000}
    env_file:
      - .env
    ports:
      - "${RALPH_RUNSERVER_PORT:-8200}:${RALPH_RUNSERVER_PORT:-8200}"
    command:
      - ralph
      - "-v"
      - DEBUG
      - runserver
      - "-b"
      - "es"
    volumes:
      - .:/app
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:8.7.1
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"
    mem_limit: 2g

  # -- tools
  dockerize:
    image: jwilder/dockerize

  notebook:
    build:
      context: ./notebook
    user: ${DOCKER_USER:-1000}
    environment:
      NB_UID: ${DOCKER_UID:-1000}
      NB_GID: ${DOCKER_GID:-1000}
      CHOWN_HOME: 'yes'
      CHOWN_HOME_OPTS: -R
    ports:
      - 8888:8888
    group_add:
      - users
    volumes:
      - ./notebook/notebooks:/home/jovyan/work
      - .:/home/jovyan/work/warren
