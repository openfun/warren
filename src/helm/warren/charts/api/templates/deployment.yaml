apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /__heartbeat__
              port: http
              httpHeaders:
                - name: Host
                  value: '{{ first .Values.allowedHosts | trimPrefix "https://" }}'
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /__lbheartbeat__
              port: http
              httpHeaders:
                - name: Host
                  value: '{{ first .Values.allowedHosts | trimPrefix "https://" }}'
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: WARREN_API_SERVER_PORT
              value: "{{ .Values.service.port }}"
            - name: WARREN_API_DB_ENGINE
              value: {{ .Values.database.engine }}
            - name: WARREN_API_DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: WARREN_APP_SIGNING_ALGORITHM
              value: {{ .Values.signingAlgorithm }}
            - name: WARREN_ALLOWED_HOSTS
              value: {{ include "api.allowedHosts" . }}
          envFrom:
            - secretRef:
                name: {{ .Values.envVarsSecret | quote }}
          {{ with .Values.podCommand }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
