# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: fundocker/warren
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "app-main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}
podCommand:
  - "gunicorn"
  - "-c"
  - "/usr/local/etc/gunicorn/warren.py"
  - "warren.wsgi:application"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Secret name to inject as environment variables
envVarsSecret: "warren-app-env"

jobs:
  dbMigrate:
    name: "warren-app-db-migrate"
    command:
      - "python"
      - "manage.py"
      - "migrate"
      - "--no-input"
    restartPolicy: Never
  collectStatic:
    name: "warren-app-collect-static"
    command:
      - "python"
      - "manage.py"
      - "collectstatic"
      - "--no-input"
    restartPolicy: Never

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

persistence:
  enabled: false
  storageClass: "standard"
  accessModes:
    - ReadWriteOnce
  volumes:
    media:
      name: media
      claimName: ""
      size: 2Gi
      mountPath: /srv/media
    static:
      name: static
      claimName: ""
      size: 2Gi
      mountPath: /srv/static

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Django application configuration
accessTokenLifetime: 300
allowedHosts: []
database:
  port: 5432
djangoConfiguration: Production
djangoSettingsModule: warren.settings
ltiAccessTokenLifetime: 86400
refreshTokenLifetime: 86400
signingAlgorithm: HS256
apiRootUrl: "http://localhost:8090"
appRootUrl: "http://localhost:8100"
corsAllowedOrigins:
  - "http://localhost:8090"
